#!/usr/bin/php
<?php

/**
 * Sync Daemon
 *
 * This is the long-running daemon for managing the syncing engine.
 * Call this script to run "forever" and manage the possibly-memory
 * abusive sync script.
 *
 * The reason for this is because PHP doesn't
 * free allocated memory, and while the script may not be consuming
 * all allocated memory, it still keeps it from the system to use.
 * For that reason, this tiny process will run forever and the sync
 * process will gracefully shut itself down at a configured memory
 * limit.
 */
use App\Constants
  , React\EventLoop\Factory
  , React\ChildProcess\Process;

// Set up paths and constants
set_time_limit( 0 );
define( 'BASEPATH', __DIR__ );
date_default_timezone_set( 'UTC' );

// Load the vendor libraries
require( BASEPATH .'/vendor/autoload.php' );

// Load configuration files and parse the CLI arguments
$constants = parse_ini_file( BASEPATH .'/config/constants.ini', FALSE );
$default = parse_ini_file( BASEPATH .'/config/default.ini', TRUE );
$local = parse_ini_file( BASEPATH .'/config/local.ini', TRUE );
$config = array_replace_recursive( $default, $local );
Constants::process( $constants );
unset( $constants );


$loop = React\EventLoop\Factory::create();
$process = new React\ChildProcess\Process( BASEPATH .'/sync -s' );

$process->on('exit', function($exitCode, $termSignal) {
    echo "Exit\n";
});

$loop->addTimer(0.001, function($timer) use ($process) {
    $process->start($timer->getLoop());
    $process->stdout->on('data', function($output) {
        echo $output;
    });
});

$loop->run();