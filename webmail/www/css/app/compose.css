/**
 * New message and reply to message
 */

body.page-compose header {
  z-index: 2;
}

section.compose {
  overflow-y: auto;
}

.compose form {
  margin: 0 2rem 2.5rem 0;
}

.compose .row:not(.message) {
  border-bottom: 1px solid #eee;
  margin-bottom: 0.75rem;
}

.compose input[type="radio"] {
  display: none;
}

.compose input[type="radio"]:checked + .hidden {
  display: block !important;
}

.compose .ten.columns {
  margin-left: 2rem;
  padding-bottom: 0.75rem;
}

.compose .ten.columns textarea,
.compose .ten.columns input[type="text"] {
  font-size: 1.5rem;
  margin-bottom: 0;
  max-width: 50rem;
  padding: 1rem 0.75rem;
  width: 100%;
}

.compose .ten.columns textarea {
  padding: 0.5rem 0.75rem;
}

.compose .ten.columns input[type="text"] {
  height: 3.25rem;
}

.compose .row.hidden {
  display: none;
}

.compose .row.input-row .label {
  padding-top: 0.25rem;
}

.compose .addresses .ten.columns {
  padding-bottom: 0.5rem;
  overflow: hidden;
}

.compose .addresses .ten.columns input[type="text"] {
  margin-bottom: 0.5rem;
  transition: margin-bottom 200ms ease-in-out;
}

.compose .addresses input[type="text"]:nth-child(n+2) {
  display: none;
}

.compose .addresses input[type="text"]:valid,
.compose .addresses input[type="text"]:valid + input,
.compose .addresses input[type="text"]:valid + div + input {
  display: block;
}

/*
This is a nice effect but it causes problems if there is a
blank address input between two valid inputs.

.compose .addresses input[type="text"]:valid:not(:focus) + input:not(:valid):not(:focus),
.compose .addresses input[type="text"]:valid:not(:focus) + div + input:not(:valid):not(:focus) {
  opacity: 0.5;
  margin-bottom: -2.25rem;
}
*/

.compose .addresses input[type="text"]:focus {
  opacity: 1;
  margin-bottom: 0.5rem;
}

.compose .addresses.from {
  padding-bottom: 0.5rem;
}

.compose .row.padded {
  padding-bottom: 0.25rem;
}

.compose .addresses.from label,
.compose .row.padded label {
  margin: 0;
}

.compose .addresses.from .show-hidden-addresses {
  position: absolute;
  right: 0;
  top: 0;
}

.compose .addresses.from .show-hidden-addresses label + label {
  margin-left: 0.5rem;
}

.compose #toggle-cc:checked ~ .from label[for="toggle-cc"] {
  display: none;
}

.compose #toggle-bcc:checked ~ .from label[for="toggle-bcc"] {
  display: none;
}

.compose .addresses.from .ten.columns {
  max-width: 50rem;
  padding-right: 6rem;
  position: relative;
}

.compose .addresses.from .ten.columns label {
  cursor: pointer;
  display: inline-block;
  font-weight: 400;
  text-decoration: underline;
}

.compose .message textarea {
  height: 30vh;
  line-height: 2.125rem;
  min-height: 15rem;
  resize: vertical;
}

.compose .help-text {
  color: #555;
  font-size: 1.125rem;
  margin-bottom: 0.25rem;
  max-width: 50rem;
}

.compose .offset-by-two.ten.columns {
  margin-left: calc(13.333% + 2rem);
}

.compose .buttons a,
.compose .buttons span {
  display: inline-block;
  transform: translateY(-0.125rem);
}

.compose .buttons button {
  margin-right: 0.25rem;
}

.compose .buttons span {
  color: #aaa;
  margin: 0 0.25rem;
}

.compose .has-error label {
  color: #d43633;
}

.compose .has-error .error-message {
  color: #d43633;
  font-size: 1.125rem;
  margin-bottom: 0.25rem;
  transform: translateY(-0.125rem);
}

.compose .has-error input[type="text"].with-error {
  border-color: #d43633;
}

/* Message preview */

.compose.preview form {
  margin-bottom: 4rem;
}

.compose.preview .help-text {
  margin-top: 1rem;
}

.outbox-preview {
  margin-bottom: 1.5rem;
}

.outbox-preview p {
  margin-bottom: 1rem;
}

.outbox-preview p:last-child {
  margin-bottom: 0;
}

.outbox-preview ol,
.outbox-preview ul {
  margin: 0 0 1rem 1rem;
}

.outbox-preview li {
  margin: 0 0 0 0.5rem;
}

.outbox-preview blockquote {
  border-left: 0.5rem solid rgba(0, 0, 0, 0.05);
  color: #777;
  margin: 0 0 1rem;
  padding: 1rem 1rem 1rem 2rem;
}

.outbox-preview pre {
  margin: 0 0 1rem 0;
}

.outbox-preview .text-html {
  padding-right: 0.75rem;
}